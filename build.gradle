/*
 * This build file was generated by the Gradle 'init' task.
 *
 */

plugins {
  id "com.jfrog.bintray" version "1.7.1"
  id "org.sonarqube" version "2.6.1"
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
targetCompatibility = 1.7

version = '0.0.11'
def libName = "preset-utils"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

ext {
    mainSource = file('src/main/java/')
    testSource = file('src/test/java/')
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    compile 'commons-cli:commons-cli:1.4'
    compile 'org.jetbrains:annotations:15.0'

    // Use JUnit test framework
    testCompile "junit:junit:4.12"
}

task sourcesJar(type: Jar) {
	from mainSource, testSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
//	options.encoding = 'UTF-8'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding","UTF-8"
        property "sonar.java.binaries", "build/classes/main/"
        property "sonar.jacoco.reportPaths","build/jacoco/test.exec"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'ch.poole'
            artifactId 'preset-utils'
			artifact sourcesJar
			artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'osm'
        name = 'preset-utils'
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/simonpoole/preset-utils.git'
        version {
        	name = "${project.version}"
			released  = new Date()
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
				passphrase = System.getenv('BINTRAY_PASSPHRASE')
			}
        }
    }
}

